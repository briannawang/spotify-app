{"version":3,"file":"static/js/738.d05aa345.chunk.js","mappings":"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","sources":["components/TrackAudioInfo.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport './AudioInfo.css';\nimport './../App.css';\nimport * as $ from \"jquery\";\n\nconst audioFeature = {\n    acousticness: 0.0,\n    danceability: 0.0,\n    energy: 0.0,\n    instrumentalness: 0.0,\n    liveness: 0.0,\n    speechiness: 0.0,\n    valence: 0.0,\n}\n\nconst analyzedAudioFeature = {\n    acousticness: \"\",\n    danceability: \"\",\n    energy: \"\",\n    instrumentalness: \"\",\n    liveness: \"\",\n    speechiness: \"\",\n    valence: \"\",\n}\n\nconst audioStructure = {\n    tempo: 0.0,\n    key: 0,\n    mode: 0,\n    time_signature: 0,\n    loudness: 0.0,\n    uri: \"\"\n}\n\nconst analyzedAudioStructure = {\n    tempo: 0, // 0 decimal places\n    key: \"\", // https://en.wikipedia.org/wiki/Pitch_class\n    mode: \"\", // major = 1, minor = 0\n    time_signature: \"\", // x/4\n    loudness: 0.0, // 1 decimal place\n    uri: \"\"\n}\n\nconst analyzeAudioFeature = (audioFeature, setAnalyzedAudioFeatures) => {\n    analyzedAudioFeature.acousticness = (\n        audioFeature.acousticness > 0.8 ? \"very_high\" :\n        audioFeature.acousticness > 0.6 ? \"high\" :\n        audioFeature.acousticness > 0.2 ? \"low\" :\n        \"not\"\n    );\n    analyzedAudioFeature.danceability = (\n        audioFeature.danceability > 0.75 ? \"very_high\" :\n        audioFeature.danceability > 0.5 ? \"high\" :\n        audioFeature.danceability > 0.15 ? \"low\" :\n        \"not\"\n    );\n    analyzedAudioFeature.energy = (\n        audioFeature.energy > 0.75 ? \"very_high\" :\n        audioFeature.energy > 0.5 ? \"high\" :\n        audioFeature.energy > 0.15 ? \"low\" :\n        \"not\"\n    );\n    analyzedAudioFeature.instrumentalness = (\n        audioFeature.instrumentalness > 0.65 ? \"very_high\" :\n        audioFeature.instrumentalness > 0.5 ? \"high\" :\n        audioFeature.instrumentalness > 0.35 ? \"low\" :\n        \"not\"\n    );\n    analyzedAudioFeature.liveness = (\n        audioFeature.liveness > 0.9 ? \"very_high\" :\n        audioFeature.liveness > 0.8 ? \"high\" :\n        audioFeature.liveness > 0.6 ? \"low\" :\n        \"not\"\n    );\n    analyzedAudioFeature.speechiness = (\n        audioFeature.speechiness > 0.66 ? \"very_high\" :\n        audioFeature.speechiness > 0.47 ? \"high\" :\n        audioFeature.speechiness > 0.33 ? \"low\" :\n        \"not\"\n    );\n    analyzedAudioFeature.valence = (\n        audioFeature.valence > 0.75 ? \"very_high\" :\n        audioFeature.valence > 0.5 ? \"high\" :\n        audioFeature.valence > 0.25 ? \"low\" :\n        \"not\"\n    );\n\n    setAnalyzedAudioFeatures(analyzedAudioFeature)\n}\n\nfunction FeatureRow({featureKey, featureValue, analyzedFeatureValue}) {\n    return (\n        <tr>\n            <td className=\"feature_key\">{featureKey.replace(\"_\", \" \")}</td>\n            <td className=\"feature_value\" id={analyzedFeatureValue}>{featureValue}</td>\n        </tr>\n    );\n}\n\nfunction FeatureTextList({audioFeatures, analyzedAudioFeatures}) {\n    var featureTextKeys = Object.keys(audioFeature);\n    var featureList = [];\n    for (var i = 0; i < featureTextKeys.length; i++) {\n        featureList.push(<FeatureRow featureKey={featureTextKeys[i]} featureValue={audioFeatures[featureTextKeys[i]]} analyzedFeatureValue={analyzedAudioFeatures[featureTextKeys[i]]}/>);\n    }\n    return (\n        <table className=\"feature_list\">\n            {featureList}\n        </table>\n    );\n}\n\nconst analyzeAudioStructure = (audioStructure, setAnalyzedAudioStructures) => {\n    analyzedAudioStructure.tempo = Math.round(audioStructure.tempo);\n    analyzedAudioStructure.mode = audioStructure.mode == 1 ? \"major\" : \"minor\";\n    analyzedAudioStructure.time_signature = audioStructure.time_signature + \"/4\";\n    analyzedAudioStructure.loudness = Math.round(audioStructure.tempo * 10) / 10 + \" dB\";\n\n    switch(audioStructure.key) {\n        case -1: analyzedAudioStructure.key = \"n/a\"; \n            break;\n        case 0: analyzedAudioStructure.key = \"C\"; \n            break;\n        case 1: analyzedAudioStructure.key = \"C♯/D♭\"; \n            break;\n        case 2: analyzedAudioStructure.key = \"D\"; \n            break;\n        case 3: analyzedAudioStructure.key = \"D♯/E♭\"; \n            break;\n        case 4: analyzedAudioStructure.key = \"E\"; \n            break;\n        case 5: analyzedAudioStructure.key = \"F\"; \n            break;\n        case 6: analyzedAudioStructure.key = \"F♯/G♭\"; \n            break;\n        case 7: analyzedAudioStructure.key = \"G\"; \n            break;\n        case 8: analyzedAudioStructure.key = \"G♯/A♭\"; \n            break;\n        case 9: analyzedAudioStructure.key = \"A\"; \n            break;\n        case 10: analyzedAudioStructure.key = \"A♯/B♭\"; \n            break;\n        case 11: analyzedAudioStructure.key = \"B\"; \n            break;\n    }\n\n    setAnalyzedAudioStructures(analyzedAudioStructure)\n}\n\nfunction StructureDisplay({analyzedAudioStructures}) {\n    var structureTextKeys = Object.keys(audioStructure);\n    var structureList = [];\n    for (var i = 1; i < 5; i++) {\n        structureList.push(<FeatureRow featureKey={structureTextKeys[i]} featureValue={analyzedAudioStructures[structureTextKeys[i]]} analyzedFeatureValue=\"audio-structure\"/>);\n    }\n    \n    return (\n        <div className=\"structure-display\">\n            <table className=\"structure-vertical\">\n                <tr><td className=\"tempo-td\">tempo</td></tr>\n                <tr><td className=\"tempo-value\">{analyzedAudioStructures.tempo}<mark className=\"bpm-td\">bpm</mark></td></tr>\n            </table>\n            <table className=\"structure_list\">\n                {structureList}\n            </table>\n        </div>\n    );\n}\n\nfunction TrackAudioInfo({token, current_track, is_pausedRef}) {\n    const [audioFeatures, setAudioFeatures] = useState(audioFeature);\n    const [analyzedAudioFeatures, setAnalyzedAudioFeatures] = useState(analyzedAudioFeature);\n    const [audioStructures, setAudioStructures] = useState(audioStructure);\n    const [analyzedAudioStructures, setAnalyzedAudioStructures] = useState(audioStructure);\n    const [noData, setNoData] = useState(true);\n\n    const trackId = current_track.id;\n\n    useEffect(() => {\n        $.ajax({\n            url: \"https://api.spotify.com/v1/audio-features/\" + trackId,\n            type: \"GET\",\n            beforeSend: xhr => {\n            xhr.setRequestHeader(\"Authorization\", \"Bearer \" + token);\n            xhr.setRequestHeader(\"Content-Type\", \"application/json\");\n            },\n\n            success: data => {\n                if(!data) {\n                    setNoData(true);\n                    return;\n                }\n\n                setAudioFeatures(data);\n                analyzeAudioFeature(data, setAnalyzedAudioFeatures);\n                setAudioStructures(data);\n                analyzeAudioStructure(data, setAnalyzedAudioStructures);\n                setNoData(false);\n\n                if (!is_pausedRef) {\n                    document.querySelector(':root').style.setProperty('--tempo', (60 / data.tempo) * data.time_signature + 's');\n                }\n            }\n        });\n      \n    }, [current_track]);\n\n    if (noData) { \n        return (\n            <>\n            </>)\n    } else {\n        return (\n            <>\n                <div className=\"TrackAudioInfo\">\n                    <FeatureTextList audioFeatures={audioFeatures} analyzedAudioFeatures={analyzedAudioFeatures}/>\n                    <StructureDisplay analyzedAudioStructures={analyzedAudioStructures}/>\n                    <a className=\"track-uri\" href={audioStructures.uri}>{audioStructures.uri}</a>\n                </div>\n            </>\n        );\n    }\n}\n\nexport default TrackAudioInfo\n"],"names":["audioFeature","acousticness","danceability","energy","instrumentalness","liveness","speechiness","valence","analyzedAudioFeature","audioStructure","tempo","key","mode","time_signature","loudness","uri","analyzedAudioStructure","FeatureRow","featureKey","featureValue","analyzedFeatureValue","className","replace","id","FeatureTextList","audioFeatures","analyzedAudioFeatures","featureTextKeys","Object","keys","featureList","i","length","push","StructureDisplay","analyzedAudioStructures","structureTextKeys","structureList","token","current_track","is_pausedRef","useState","setAudioFeatures","setAnalyzedAudioFeatures","audioStructures","setAudioStructures","setAnalyzedAudioStructures","noData","setNoData","trackId","useEffect","$","url","type","beforeSend","xhr","setRequestHeader","success","data","analyzeAudioFeature","Math","round","analyzeAudioStructure","document","querySelector","style","setProperty","href"],"sourceRoot":""}