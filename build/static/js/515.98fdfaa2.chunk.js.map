{"version":3,"file":"static/js/515.98fdfaa2.chunk.js","mappings":"sKAIMA,EAAgB,CAClBC,MAAO,CAAC,CACJC,MAAO,CACHC,IAAK,GACLC,GAAI,GACJC,KAAM,GACNC,MAAO,CACHC,OAAQ,CACJ,CAAEC,IAAK,MAGfC,QAAS,CACL,CAAEJ,KAAM,KAEZK,YAAa,KAGrBC,MAAO,GAsBX,SAASC,EAAT,GAAgD,IAA7BV,EAA4B,EAA5BA,MAAOW,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,YAC7B,OACI,gBAAIC,UAAU,WAAWC,QAAS,YArBjB,SAACb,EAAKU,EAAOC,GAClC,IAAIG,EAAO,oBAAsBH,EAAc,yBAA2BX,EAAM,MAEhFe,EAAAA,KAAO,CACHV,IAAK,4CACLW,KAAM,MACNF,KAAMA,EACNG,WAAY,SAAAC,GACZA,EAAIC,iBAAiB,gBAAiB,UAAYT,GAClDQ,EAAIC,iBAAiB,SAAU,oBAC/BD,EAAIC,iBAAiB,eAAgB,mBACpC,EAEDC,QAAS,SAAAN,GACLO,QAAQC,IAAI,oBAAsBtB,EACrC,GAER,CAIgDuB,CAAiBxB,EAAMC,IAAKU,EAAOC,EAAa,EAAzF,WACI,yBAAI,gBAAKa,IAAKzB,EAAMI,MAAMC,OAAO,GAAGC,IAAKO,UAAU,cAAca,IAAI,QACrE,2BAAI,cAAGb,UAAU,YAAYX,GAAG,iBAA5B,SAA8CF,EAAMG,QACpD,eAAGU,UAAU,YAAYX,GAAG,oBAA5B,UAAiDF,EAAMO,QAAQ,GAAGJ,KAAMH,EAAMO,QAAQ,IAAM,KAAOP,EAAMO,QAAQ,GAAGJ,aAInI,CAED,SAASwB,EAAT,GAEI,IAF0D,IAAvCC,EAAsC,EAAtCA,SAAUC,EAA4B,EAA5BA,MAAOlB,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,YACvCkB,EAAe,GACVC,EAAIH,EAAS7B,MAAMiC,OAAS,EAAGD,GAAK,EAAGA,IAC5CD,EAAaG,MAAK,SAACvB,EAAD,CAAUV,MAAO4B,EAAS7B,MAAMgC,GAAG/B,MAAOW,MAAOA,EAAOC,YAAaA,KAG3F,OACI,iBAAKC,UAAU,qBAAf,WACI,uBAAIgB,KACJ,gBAAKhB,UAAU,gBAAf,UACI,kBAAOA,UAAU,aAAjB,SACKiB,QAKpB,CA8CD,UA5CA,YAA8D,IAA1CnB,EAAyC,EAAzCA,MAAOL,EAAkC,EAAlCA,IAAKuB,EAA6B,EAA7BA,MAAOjB,EAAsB,EAAtBA,YACnC,GADyD,EAATsB,QAChBC,EAAAA,EAAAA,UAASrC,IAAzC,eAAO8B,EAAP,KAAiBQ,EAAjB,KACA,GAA4BD,EAAAA,EAAAA,WAAS,GAArC,eAAOE,EAAP,KAAeC,EAAf,KA2BA,OAzBAC,EAAAA,EAAAA,YAAU,WACM,KAARjC,GACAU,EAAAA,KAAO,CACHV,IAAKA,EACLW,KAAM,MACNC,WAAY,SAAAC,GACZA,EAAIC,iBAAiB,gBAAiB,UAAYT,GAClDQ,EAAIC,iBAAiB,SAAU,oBAC/BD,EAAIC,iBAAiB,eAAgB,mBACpC,EAEDC,QAAS,SAAAN,GACDA,GAKJqB,EAAYrB,GACZuB,GAAU,IALNA,GAAU,EAMjB,GAIZ,GAAE,CAAChC,IAEA+B,GAEI,+BAAE,gBAAKxB,UAAU,wBAIjB,+BACI,gBAAKA,UAAU,mBAAf,UACI,SAACc,EAAD,CAAcC,SAAUA,EAAUC,MAAOA,EAAOlB,MAAOA,EAAOC,YAAaA,OAK9F,C","sources":["components/TrackView.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport * as $ from \"jquery\";\nimport './PlaylistView.css';\n\nconst playlistItems = {\n    items: [{\n        track: {\n            uri: \"\",\n            id: \"\",\n            name: \"\",\n            album: {\n                images: [\n                    { url: \"\" }\n                ]\n            },\n            artists: [\n                { name: \"\" }\n            ],\n            duration_ms: 0\n        }\n    }],\n    total: 0\n}\n\nconst handleClickTrack = (uri, token, context_uri) => {\n    let data = '{\"context_uri\": \"' + context_uri + '\", \"offset\": {\"uri\": \"' + uri + '\"}}';\n\n    $.ajax({\n        url: \"https://api.spotify.com/v1/me/player/play\",\n        type: \"PUT\",\n        data: data,\n        beforeSend: xhr => {\n        xhr.setRequestHeader(\"Authorization\", \"Bearer \" + token);\n        xhr.setRequestHeader(\"Accept\", \"application/json\");\n        xhr.setRequestHeader(\"Content-Type\", \"application/json\");\n        },\n\n        success: data => {\n            console.log(\"changed song to: \" + uri);\n        }\n    });\n}\n\nfunction TrackRow({track, token, context_uri}) {\n    return (\n        <tr className=\"list_row\" onClick={() => {handleClickTrack(track.uri, token, context_uri)}}>\n            <td><img src={track.album.images[0].url} className=\"small_cover\" alt=\"\"/></td>\n            <td><p className=\"list_item\" id=\"track_top_text\">{track.name}</p>\n                <p className=\"list_item\" id=\"track_bottom_text\">{track.artists[0].name}{track.artists[1] && \", \" + track.artists[1].name}</p>\n            </td>\n        </tr>\n    );\n}\n\nfunction TrackDisplay({playlist, title, token, context_uri}) {\n    var playlistList = [];\n    for (var i = playlist.items.length - 1; i >= 0; i--) {\n        playlistList.push(<TrackRow track={playlist.items[i].track} token={token} context_uri={context_uri}/>);\n    }\n\n    return (\n        <div className=\"playlist-container\">\n            <p>{title}</p>\n            <div className=\"playlist_list\">\n                <table className=\"list_table\">\n                    {playlistList}\n                </table>\n            </div>\n        </div>\n    );\n}\n\nfunction TrackView({token, url, title, context_uri, offset}) {\n    const [playlist, setPlaylist] = useState(playlistItems);\n    const [noData, setNoData] = useState(true);\n\n    useEffect(() => {\n        if (url !== \"\") {\n            $.ajax({\n                url: url,\n                type: \"GET\",\n                beforeSend: xhr => {\n                xhr.setRequestHeader(\"Authorization\", \"Bearer \" + token);\n                xhr.setRequestHeader(\"Accept\", \"application/json\");\n                xhr.setRequestHeader(\"Content-Type\", \"application/json\");\n                },\n\n                success: data => {\n                    if(!data) {\n                        setNoData(true);\n                        return;\n                    }\n\n                    setPlaylist(data);\n                    setNoData(false);\n                }\n            });\n        }\n      \n    }, [url]);\n\n    if (noData) { \n        return (\n            <><div className=\"playlist-display\"></div>\n            </>)\n    } else {\n        return (\n            <>\n                <div className=\"playlist-display\">\n                    <TrackDisplay playlist={playlist} title={title} token={token} context_uri={context_uri}/>\n                </div>\n            </>\n        );\n    }\n}\n\nexport default TrackView\n"],"names":["playlistItems","items","track","uri","id","name","album","images","url","artists","duration_ms","total","TrackRow","token","context_uri","className","onClick","data","$","type","beforeSend","xhr","setRequestHeader","success","console","log","handleClickTrack","src","alt","TrackDisplay","playlist","title","playlistList","i","length","push","offset","useState","setPlaylist","noData","setNoData","useEffect"],"sourceRoot":""}